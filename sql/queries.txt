
###########################################################################
## Define metrics
###########################################################################

INSERT INTO METRICS VALUES 
(1, "Share", "The proportion of posts that contain the topic.");

INSERT INTO METRICS VALUES 
(2, "Impact", "The proportion of posts that contain the topic in a given month.");



###########################################################################
## Setup helper tables and stuff
###########################################################################

INSERT INTO MONTHS
(
    `YEAR`, `MONTH`, `POST_COUNT`
)
SELECT
    YEAR(DATE) as YEAR,
    MONTH(DATE) as MONTH,
    COUNT(*) as POST_COUNT
FROM POSTS 
GROUP BY YEAR(DATE), MONTH(DATE);

SELECT SUM(m.POST_COUNT) FROM MONTHS m INTO @NUM_POSTS;



###########################################################################
## Tag Analysis
###########################################################################


## New (unique) tags per month
# First, find the first month for each tag...

INSERT INTO DATEOFTAGSFIRSTAPPEARANCE (
    `TAG_ID`, `DATE`
)
SELECT 
    t.ID as TagID, 
    MIN(p.DATE) as FirstDate
FROM POSTS_TAGS pt
JOIN POSTS p
    ON p.ID = pt.POST_ID
JOIN TAGS t
    ON t.ID = pt.TAG_ID
GROUP BY TagID;


# ... then, count IDs per date

SELECT
    COUNT(TAG_ID) as NewTagCount,
    YEAR(DATE) as YEAR,
    MONTH(DATE) as MONTH
FROM DATEOFTAGSFIRSTAPPEARANCE 
GROUP BY YEAR(DATE), MONTH(DATE)
INTO OUTFILE '/tmp/newtagcount.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';




## Total tag count in desc order

SELECT 
    COUNT(pt.TAG_ID) as TagCount,
    t.LABEL as TagLabel 
FROM POSTS_TAGS pt
JOIN POSTS p
    ON p.ID = pt.POST_ID
JOIN TAGS t
    ON t.ID = pt.TAG_ID
GROUP BY pt.TAG_ID
ORDER BY TagCount
INTO OUTFILE '/tmp/totaltagcount.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';



###########################################################################
## Topic metrics
###########################################################################


## Topic share:

INSERT INTO TOPICMETRICS
(
    `TOPIC_ID`, `METRIC_ID`, `DATE`, `VALUE`
)
SELECT 
    t.TOPIC_ID as TopicID, 
    1 as MetricID, 
    "0000-00-00" as Date, 
    SUM(t.WEIGHT)/@NUM_POSTS as Value
FROM POSTS p
JOIN THETA t
    ON t.POST_ID = p.ID
GROUP BY TopicID;



## Topic impact:

INSERT INTO TOPICMETRICS
(
    `TOPIC_ID`, `METRIC_ID`, `DATE`, `VALUE`
)
SELECT t.TOPIC_ID as TopicID, 2 as MetricID, MIN(p.DATE) as Date, SUM(t.WEIGHT)/m.POST_COUNT as
Value
FROM POSTS p
JOIN THETA t
  ON t.POST_ID = p.ID
JOIN MONTHS m
  ON    YEAR(p.DATE) = m.YEAR
    AND MONTH(p.DATE) = m.MONTH
GROUP BY TopicID, YEAR(p.DATE), MONTH(p.DATE);





## TODO:
# SELECT * FROM POSTS WHERE P_ORIGTEXT LIKE "%telerik%";



## TODO: How to find out what posts a topic has, in order


## TODO: How to find out what posts a post has, in order



###########################################################################
## Output files so that R can use them
###########################################################################

SELECT  COUNT(ID) as NumPosts, DATE  Month, POSTTYPE as Type 
FROM    POSTS
GROUP BY YEAR(DATE), MONTH(DATE), Type
INTO OUTFILE '/tmp/out.csv'
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n';
